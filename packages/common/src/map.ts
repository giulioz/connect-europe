export type CityColors = "blue" | "red" | "green" | "orange" | "yellow";
export const cityColorsArray: CityColors[] = [
  "blue",
  "red",
  "green",
  "orange",
  "yellow",
];

export type City = {
  name: string;
  position: [number, number];
  color: CityColors;
  textWidth: number;
};

export const cities: City[] = [
  { name: "glasgow", position: [9, 0], color: "yellow", textWidth: 52 },
  { name: "oslo", position: [15, 0], color: "yellow", textWidth: 29 },
  { name: "stockholm", position: [19, 0], color: "yellow", textWidth: 64 },
  { name: "helsinki", position: [23, 0], color: "yellow", textWidth: 50 },
  { name: "st. peterburg", position: [27, 0], color: "yellow", textWidth: 80 },
  { name: "moskva", position: [31, 2], color: "yellow", textWidth: 43 },
  { name: "malmo", position: [17, 2], color: "yellow", textWidth: 38 },
  { name: "dublin", position: [5, 2], color: "red", textWidth: 38 },
  { name: "london", position: [8, 3], color: "red", textWidth: 44 },
  { name: "plymouth", position: [3, 4], color: "red", textWidth: 56 },
  { name: "brest", position: [2, 5], color: "red", textWidth: 34 },
  { name: "bilbao", position: [3, 8], color: "red", textWidth: 37 },
  { name: "madrid", position: [1, 10], color: "red", textWidth: 40 },
  { name: "barcelona", position: [6, 11], color: "red", textWidth: 62 },
  { name: "amsterdam", position: [11, 4], color: "orange", textWidth: 65 },
  { name: "paris", position: [9, 6], color: "orange", textWidth: 30 },
  { name: "berlin", position: [16, 5], color: "orange", textWidth: 37 },
  { name: "zurich", position: [13, 8], color: "orange", textWidth: 39 },
  { name: "wien", position: [17, 8], color: "orange", textWidth: 27 },
  { name: "budapest", position: [21, 8], color: "orange", textWidth: 55 },
  { name: "warszawa", position: [22, 5], color: "orange", textWidth: 59 },
  { name: "riga", position: [24, 1], color: "green", textWidth: 26 },
  { name: "vilnius", position: [24, 3], color: "green", textWidth: 40 },
  { name: "minsk", position: [27, 4], color: "green", textWidth: 33 },
  { name: "kyiv", position: [29, 6], color: "green", textWidth: 24 },
  { name: "charkiv", position: [32, 7], color: "green", textWidth: 45 },
  { name: "odessa", position: [30, 9], color: "green", textWidth: 43 },
  { name: "bucaresti", position: [27, 10], color: "green", textWidth: 58 },
  { name: "sofia", position: [24, 11], color: "blue", textWidth: 31 },
  { name: "thessaloniki", position: [24, 13], color: "blue", textWidth: 73 },
  { name: "istanbul", position: [27, 12], color: "blue", textWidth: 49 },
  { name: "tirana", position: [19, 12], color: "blue", textWidth: 38 },
  { name: "roma", position: [15, 12], color: "blue", textWidth: 31 },
  { name: "firenze", position: [13, 10], color: "blue", textWidth: 44 },
  { name: "marseille", position: [9, 10], color: "blue", textWidth: 57 },
];

export const points: [number, number][] = [
  [5, 0],
  [7, 0],
  [9, 0],
  [11, 0],
  [13, 0],
  [15, 0],
  [17, 0],
  [19, 0],
  [21, 0],
  [23, 0],
  [25, 0],
  [27, 0],
  [29, 0],
  [4, 1],
  [6, 1],
  [8, 1],
  [10, 1],
  [12, 1],
  [14, 1],
  [16, 1],
  [18, 1],
  [20, 1],
  [22, 1],
  [24, 1],
  [26, 1],
  [28, 1],
  [30, 1],
  [3, 2],
  [5, 2],
  [7, 2],
  [9, 2],
  [11, 2],
  [13, 2],
  [15, 2],
  [17, 2],
  [19, 2],
  [21, 2],
  [23, 2],
  [25, 2],
  [27, 2],
  [29, 2],
  [31, 2],
  [2, 3],
  [4, 3],
  [6, 3],
  [8, 3],
  [10, 3],
  [12, 3],
  [14, 3],
  [16, 3],
  [18, 3],
  [20, 3],
  [22, 3],
  [24, 3],
  [26, 3],
  [28, 3],
  [30, 3],
  [32, 3],
  [1, 4],
  [3, 4],
  [5, 4],
  [7, 4],
  [9, 4],
  [11, 4],
  [13, 4],
  [15, 4],
  [17, 4],
  [19, 4],
  [21, 4],
  [23, 4],
  [25, 4],
  [27, 4],
  [29, 4],
  [31, 4],
  [33, 4],
  [2, 5],
  [4, 5],
  [6, 5],
  [8, 5],
  [10, 5],
  [12, 5],
  [14, 5],
  [16, 5],
  [18, 5],
  [20, 5],
  [22, 5],
  [24, 5],
  [26, 5],
  [28, 5],
  [30, 5],
  [32, 5],
  [1, 6],
  [3, 6],
  [5, 6],
  [7, 6],
  [9, 6],
  [11, 6],
  [13, 6],
  [15, 6],
  [17, 6],
  [19, 6],
  [21, 6],
  [23, 6],
  [25, 6],
  [27, 6],
  [29, 6],
  [31, 6],
  [33, 6],
  [2, 7],
  [4, 7],
  [6, 7],
  [8, 7],
  [10, 7],
  [12, 7],
  [14, 7],
  [16, 7],
  [18, 7],
  [20, 7],
  [22, 7],
  [24, 7],
  [26, 7],
  [28, 7],
  [30, 7],
  [32, 7],
  [1, 8],
  [3, 8],
  [5, 8],
  [7, 8],
  [9, 8],
  [11, 8],
  [13, 8],
  [15, 8],
  [17, 8],
  [19, 8],
  [21, 8],
  [23, 8],
  [25, 8],
  [27, 8],
  [29, 8],
  [31, 8],
  [33, 8],
  [0, 9],
  [2, 9],
  [4, 9],
  [6, 9],
  [8, 9],
  [10, 9],
  [12, 9],
  [14, 9],
  [16, 9],
  [18, 9],
  [20, 9],
  [22, 9],
  [24, 9],
  [26, 9],
  [28, 9],
  [30, 9],
  [32, 9],
  [1, 10],
  [3, 10],
  [5, 10],
  [7, 10],
  [9, 10],
  [11, 10],
  [13, 10],
  [15, 10],
  [17, 10],
  [19, 10],
  [21, 10],
  [23, 10],
  [25, 10],
  [27, 10],
  [29, 10],
  [31, 10],
  [2, 11],
  [4, 11],
  [6, 11],
  [8, 11],
  [10, 11],
  [12, 11],
  [14, 11],
  [16, 11],
  [18, 11],
  [20, 11],
  [22, 11],
  [24, 11],
  [26, 11],
  [28, 11],
  [30, 11],
  [5, 12],
  [7, 12],
  [9, 12],
  [11, 12],
  [13, 12],
  [15, 12],
  [17, 12],
  [19, 12],
  [21, 12],
  [23, 12],
  [25, 12],
  [27, 12],
  [29, 12],
  [14, 13],
  [16, 13],
  [18, 13],
  [20, 13],
  [22, 13],
  [24, 13],
  [26, 13],
  [28, 13],
];

function uniquePairs(pairs: [[number, number], [number, number]][]) {
  return pairs.reduce(
    (acc: [[number, number], [number, number]][], pair) =>
      !acc.find(
        accElement =>
          accElement[0][0] === pair[0][0] &&
          accElement[0][1] === pair[0][1] &&
          accElement[1][0] === pair[1][0] &&
          accElement[1][1] === pair[1][1]
      )
        ? [...acc, pair]
        : acc,
    []
  );
}

export const pointPairs = points
  .reduce(
    (arr: [[number, number], [number, number]][], p1) =>
      uniquePairs([
        ...arr,
        ...points
          .filter(
            p2 =>
              !(p2[0] === p1[0] && p2[1] === p1[1]) &&
              (Math.sqrt((p2[0] - p1[0]) ** 2 + (p2[1] - p1[1]) ** 2) <=
                Math.sqrt(2) ||
                (p2[1] - p1[1] === 0 && p2[0] - p1[0] === 2))
          )
          .map<[[number, number], [number, number]]>(
            p2 =>
              [p1, p2].sort((a, b) => a[0] - b[0]) as [
                [number, number],
                [number, number]
              ]
          ),
      ]),
    []
  )
  .map(([from, to]) => ({ from, to, double: Math.random() > 0.75 }));
